1) Setup EC2 Amazon instance with CENTOS 6.5 release
2) Modify security group to include incoming ssh, http, 8001, icmp, smtp (25)
3) Create POSTGRESQL RDS instance (threeandout, threeandout)
4) Create static IP for EC2, changed DNS to include
5) Create ops user on EC2 instance
6) Change hostname, threeandout
7) Make /data directory, checkout https://github.com/jxp360/threeandout, git checkout develop
8) Edit /data/threeandout/threeandout/settings/prod.py and change POSTGRESQL host ip
9) Enable EPEL sudo yum localinstall "http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm"
10) sudo yum install python-pip
11) sudo pip install virtualenv
12) sudo yum install httpd
13) Sudo pip install virtualenvwrapper
14) edit .bashrc, add 
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
15) source ~/.bashrc
16) mkvirtualenv procution --no-site-packages
17) sudo yum install postgresql-devel
18) sudo yum groupinstall "Development Tools"
19) workon production
20) pip install -r requirements.txt (/data/threeandout)
21) sudo yum install mod_wsgi
22) 
createuser -h threeandout-ops.cjftsjpuovni.us-east-1.rds.amazonaws.com -p 5432 -U threeandout -E -P nfldb
Enter password for new role:
Enter it again:
Shall the new role be a superuser? (y/n) n
Shall the new role be allowed to create databases? (y/n) y
Shall the new role be allowed to create more new roles? (y/n) n


23) createdb -h threeandout-ops.cjftsjpuovni.us-east-1.rds.amazonaws.com -p 5432 -U nfldb nfldb
24) psql -h threeandout-ops.cjftsjpuovni.us-east-1.rds.amazonaws.com -p 5432 -U threeandout -c 'CREATE EXTENSION fuzzystrmatch;' nfldb
25) psql -h threeandout-ops.cjftsjpuovni.us-east-1.rds.amazonaws.com -p 5432 -U nfldb nfldb < nfldb.sql
26) mkdir -p /home/ops/.config/nfldb
27) cp ~/.virtualenvs/production/share/nfldb/config.ini.sample ~/.config/nfldb/config.ini
28) Edit ~/.config/nfldb/config.ini, change password and hostname
29) yum install libxdlt-devel
30) pip install lxml
31) Change all total_second places in nfldb/nflgame
 (td.microseconds + (td.seconds + td.days * 24 * 3600)
 






